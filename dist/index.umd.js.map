{"version":3,"file":"index.umd.js","sources":["../src/utils/index.ts","../src/useMerge/index.ts","../src/useMemoState/index.ts"],"sourcesContent":["export const isObject = (value: unknown) => value !== null && typeof value === 'object' && !Array.isArray(value);\r\nexport const isArray = (value: unknown) => Array.isArray(value);\r\nexport const isFunction = (value: unknown) => typeof value === 'function';\r\nexport const isString = (value: unknown) => typeof value === 'string';\r\nexport const isBoolean = (value: unknown) => typeof value === 'boolean';\r\nexport const isNumber = (value: unknown) => typeof value === 'number';\r\nexport const isUndef = (value: unknown) => typeof value === 'undefined';\r\n\r\nexport function isTypeSame(param1: unknown, param2: unknown) {\r\n    let same = false;\r\n    switch (true) {\r\n        case isObject(param1):\r\n            same = isObject(param2);\r\n            break;\r\n        case isArray(param1):\r\n            same = isArray(param2);\r\n            break;\r\n        case isFunction(param1):\r\n            same = isFunction(param2);\r\n            break;\r\n        case isString(param1):\r\n            same = isString(param2);\r\n            break;\r\n        case isBoolean(param1):\r\n            same = isBoolean(param2);\r\n            break;\r\n        case isNumber(param1):\r\n            same = isNumber(param2);\r\n            break;\r\n        case isUndef(param1):\r\n            same = isUndef(param2);\r\n            break;\r\n    }\r\n    return same;\r\n}","import { isArray, isBoolean, isFunction, isNumber, isObject, isString, isTypeSame, isUndef } from \"../utils\";\r\n\r\nfunction mergeObject(param1: Record<string | number, any>, param2: Record<string | number, any>) {\r\n    let mergeParams = { ...param1 };\r\n    for (let key in param2) {\r\n        if (!isTypeSame(mergeParams[key], param2[key])) {\r\n            mergeParams[key] = param2[key];\r\n        } else if (isObject(mergeParams[key])) {\r\n            mergeParams[key] = mergeObject(mergeParams[key], param2[key]);\r\n        } else if (isArray(mergeParams[key])) {\r\n            mergeParams[key] = [...mergeParams[key], ...param2[key]];\r\n        } else {\r\n            mergeParams[key] = param2[key];\r\n        }\r\n    }\r\n    return mergeParams;\r\n}\r\n\r\nexport default function useMerge(param1: any, param2: any): any {\r\n    if (!isTypeSame(param1, param2) &&\r\n        !isFunction(param1) && !isFunction(param2)\r\n    ) return param1;\r\n    let _merged, _param1 = param1, _param2 = param2;\r\n    if (isFunction(param1)) {\r\n        _param1 = param1();\r\n    }\r\n    if (isFunction(param2)) {\r\n        _param2 = param2();\r\n    }\r\n    switch (true) {\r\n        case isObject(_param1):\r\n            _merged = mergeObject(_param1, _param2);\r\n            break;\r\n\r\n        case isArray(_param1):\r\n            _merged = [..._param1, ..._param2];\r\n            break;\r\n\r\n        default:\r\n            _merged = _param2;\r\n            break;\r\n    }\r\n    return _merged;\r\n}","import { useState, useRef, Dispatch, SetStateAction } from 'react'\r\nimport useMerge from \"../useMerge\";\r\n\r\n\r\nexport default function useMemoState<T>(params: T | (() => T)): [T, Dispatch<SetStateAction<T>>, (arg0: any) => void] {\r\n    const { current: initalState } = useRef(params);\r\n    const [state, setState] = useState(initalState);\r\n    const { current: resetState } = useRef((otherParams: any) => {\r\n        if (otherParams) {\r\n            setState(useMerge(initalState, otherParams));\r\n        } else {\r\n            setState(initalState);\r\n        }\r\n    });\r\n    return [state, setState, resetState];\r\n}"],"names":["isObject","value","_typeof","Array","isArray","isFunction","isString","isBoolean","isNumber","isUndef","isTypeSame","param1","param2","same","mergeObject","mergeParams","_objectSpread","key","concat","_toConsumableArray","useMerge","_merged","_param1","_param2","useMemoState","params","_useRef","useRef","initalState","current","_useState","useState","_useState2","_slicedToArray","state","setState","_useRef2","otherParams","resetState"],"mappings":"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"}